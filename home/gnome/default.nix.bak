{ pkgs, lib, ... }:
{
  # Due to the way desktop configuration works in Nixpkgs, we have to install
  # an X server even if we only use Wayland.
  services.xserver = {
    enable = true;

    # We can exclude these packages without breaking X in gnome-shell, even if
    # I almost never use it.
    excludePackages = [ pkgs.xterm ] ++ (with pkgs.xorg; [
      iceauth
      xauth
      xf86inputevdev
      xinput
      xlsclients
      xorgserver
      xprop
      xrandr
      xrdb
      xset
      xsetroot
    ]);
    

    desktopManager.gnome.enable = true;
    displayManager = {
      # https://github.com/NixOS/nixpkgs/issues/103746#issuecomment-945091229
      # autoLogin crash issue w/ workaround; disabling suffices
      autoLogin.enable = false;

      gdm = {
        enable = true;
	autoSuspend = false;
      };
    };
  };

  # Disable default GNOME module features.
  hardware.pulseaudio.enable = false;
  services = {
    avahi.enable = false;

    gnome = {
      core-utilities.enable = false;
      tracker-miners.enable = false;
      tracker.enable = false;
    };

    pipewire = {
      enable = true;
      pulse.enable = true;
      alsa.enable = true;
    };
  };

  # networking.networkmanager.wifi.backend = "iwd";
  
  environment = {
    gnome.excludePackages = with pkgs.gnome; [
      geary
      # gnome-bluetooth
      # gnome-terminal
      pkgs.gnome-tour
      pkgs.orca
    ];

    # sessionVariables.GTK_THEME = "adw-gtk3-dark";

    systemPackages = with pkgs; [
      amberol
      celluloid
      gnome.gnome-calculator
      gnome.gnome-calendar
      gnome.gnome-system-monitor
      gnome.gnome-weather
      gnome.nautilus
      gnome.sushi
    ] ++ (with pkgs.gnomeExtensions; [
      blur-my-shell
    ]);
  };

  programs.dconf.profiles = {
    # TODO: Investigate customizing gdm greeter.
    user.databases = [{
      settings = with lib.gvarient; {
        "org/gnome/desktop/calendar".show-weekdate = true;
	"org/gnome/desktop/input-sources".sources = [
	  (mkTuple [ "xkb" "us" ])
	  (mkTuple [ "xkb" "es" ])
	];
        "org/gnome/desktop/interface".color-scheme = "prefer-dark";
        "org/gnome/desktop/interface".show-battery-percentage = true;
        # "org/gnome/desktop/media-handling".automount = false;
        "org/gnome/desktop/peripherals/mouse".accel-prefoile = "flat";
        # "org/gnome/desktop/privacy".remember-recent-files = false;
        # "org/gnome/desktop/screensaver".lock-enabled = false;
	# "org/gnome/desktop/session".idle-delay = mkUint32 0;
	# "org/gnome/desktop/wm/preferences".resize-with-right-button = true;
	"org/gnome/mutter" = {
          edge-tiling = true;
	  attach-modal-dialogs = true;
	  # experimental-features = [ "scale-monitor-framebuffer" ];
	};
	"org/gnome/settings-daemon/plugins/power" = {
          # Suspend only on battery power, not while charging
	  sleep-inactive-ac-type = "nothing";
	  power-button-action = "interactive";
	};

	"org/gnome/nautilus/preferences".default-folder-viewer = "list-view";
	"org/gnome/nautilus/list-view" = {
          use-tree-view = true;
	  default-zoom-level = "small";
	};

	"org/gtk/gtk4/settings/file-chooser" = {
          sort-directories-first = true;
	  show-hidden = true;
	  view-type = "list";
	};

	"io/github/celluloid-playor/celluloid".always-open-new-window = true;

	# Hidden/background programs only show up if they are flatpaks,
	# so disable background play for now.
	"io/bassi/Amberol".background-play = false;

        # Define Media Keys?
        "org/gnome/settings-daemon/plugins/media-keys" = {
          screenreader = mkEmptyArray type.string;
	  magnifier = mkEmptyArray type.string;
	  calculator = [ "<Super>c" ];
	};

        # Custom Keybindings
	"org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0" = {
          binding = "<Super>t";
	  command = "kgx";
	  name = "Terminal";
	};
        # Don't forget to add new ones here
	"org/gnome/settings-daemon/plugins/media-keys".custom-keybindings = [
           "org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/"
	];

        # Set new GNOME Keybindings
	"org/gnome/desktop/wm/keybindings" = {
	  # Consider setting to vim directional binds; deal with conflicts
          switch-to-workspace-left = [ "<Super>a" ];
	  switch-to-workspace-right = [ "<Super>d" ];
	  move-to-workspace-left = [ "<Shift><Super>a" ];
	  move-to-workspace-right = [ "<Shift><Super>d" ];
          switch-to-workspace-1 = [ "<Super>1" ];
          switch-to-workspace-2 = [ "<Super>2" ];
          switch-to-workspace-3 = [ "<Super>3" ];
          switch-to-workspace-4 = [ "<Super>4" ];
	  switch-input-source = [ "<Shift><Alt>" ];
	  switch-input-source-backward = mkEmptyArray type.string;
	  activate-window-menu = [ "Menu" ];
	  #close = [ "<Shift><Super>w" ];
	  #maximize = [ "<Super>f" ];
	  #toggle-fullscreen = [ "<Shift><Super>f" ];
	};
	# Following bindings replaced by above
        "/org/gnome/shell/keybindings" = {
          toggle-application-view = mkEmptyArray type.string;
	  switch-to-application-1 = mkEmptyArray type.string;
	  switch-to-application-2 = mkEmptyArray type.string;
	  switch-to-application-3 = mkEmptyArray type.string;
	  switch-to-application-4 = mkEmptyArray type.string;

	  show-screen-recording-ui = mkEmptyArray type.string;
	  screenshot = mkEmptyArray type.string;
	  show-screenshot-ui = [ "<Shift><Super>s" ];
	  screenshot-window = mkEmptyArray type.string;
	};

        "org/gnome/shell".enabled-extensions = [
          "blur-my-shell@aunetx"
	];
        # "org/gnome/shell/extensions/blur-my-shell".color-and-noise = false;
	# "org/gnome/shell/extensions/blur-my-shell/applications".blur = false;
      };
    };
  };
}
